apply plugin: 'com.android.application'

repositories {
    maven {
        url "https://jitpack.io"

    }

    maven {
        url "https://dl.bintray.com/riontech/maven"
    }

    maven { url 'https://maven.google.com' }
}
android {
    compileSdkVersion 27
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.zone.android.miskool"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //multiDexEnabled true

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    buildTypes {

        debug {
            minifyEnabled false
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'


            lintOptions {
                // Returns whether lint should be quiet (for example, not write informational messages such as paths to report files written)
                quiet true

                // Whether lint should set the exit code of the process if errors are found
                abortOnError false

                // Returns whether lint will only check for errors (ignoring warnings)
                ignoreWarnings true

                // Returns whether lint should check for fatal errors during release builds. Default is true.
                // If issues with severity "fatal" are found, the release build is aborted.
                checkReleaseBuilds false
            }
        }
    }
}


    dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    //implementation 'com.android.support:appcompat-v7:28.0.0'
    //implementation 'com.google.android.gms:play-services-maps:11.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
        implementation 'com.android.support:design:27.1.0'
        implementation 'com.android.support.constraint:constraint-layout:1.0.2'


        implementation 'com.firebase:firebase-jobdispatcher:0.8.5'

        implementation 'com.android.support:appcompat-v7:27.1.0'
        implementation 'com.github.arcadefire:nice-spinner:1.3.4'
        implementation 'com.jakewharton.threetenabp:threetenabp:1.0.3'


        implementation 'com.google.firebase:firebase-core:12.0.1'
        implementation 'com.github.zurche:plain-pie:v0.2.4'
        implementation 'com.github.jakob-grabner:Circle-Progress-View:v1.3'
        implementation 'com.numetriclabz.numandroidcharts:numandroidcharts:1.0.8'
      //  implementation "android.arch.work:work-runtime:1.0.0-alpha02"


        def work_version = "1.0.0-alpha11"

        implementation "android.arch.work:work-runtime:$work_version" // use -ktx for Kotlin


       // implementation "android.arch.work:work-runtime:$work_version"
        
      /*  compile 'com.mindorks:placeholderview:0.1.1'*/
        implementation 'com.github.Yalantis:Context-Menu.Android:1.0.8'

        implementation 'com.github.yalantis:Side-Menu.Android:1.0.1'
     //   implementation 'com.github.tizisdeepan:eventscalendar:1.0.2'

        implementation 'com.roomorama:caldroid:3.0.1'

        implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'
        implementation 'com.jjoe64:graphview:4.2.2'
        implementation 'com.github.lzyzsd:circleprogress:1.2.1'
        implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'

        implementation 'com.google.android.gms:play-services-maps:12.0.1'
        implementation 'com.google.android.gms:play-services-places:12.0.1'
        implementation 'com.google.android.gms:play-services-location' +
                ':12.0.1'
        implementation 'com.github.jakob-grabner:Circle-Progress-View:v1.3'

       /* compile "org.apache.httpcomponents:httpcore:4.4.1"
        compile "org.apache.httpcomponents:httpmime:4.3.5"*/

        implementation('org.apache.httpcomponents:httpmime:4.3.6') {
            exclude module: 'httpclient'
        }
        implementation 'org.apache.httpcomponents:httpclient-android:4.3.5'

        implementation 'com.roger.catloadinglibrary:catloadinglibrary:1.0.1'

        implementation 'com.android.volley:volley:1.1.0'


        implementation 'com.android.support:recyclerview-v7:27.1.0'
        // CardView


        implementation 'com.android.support:cardview-v7:27.1.0'
        implementation 'com.github.franmontiel:AttributionPresenter:1.0'

        implementation 'com.google.android.gms:play-services-oss-licenses:12.0.1'
//adding sliding up panel

        implementation 'com.sothree.slidinguppanel:library:3.3.0'



       // implementation 'com.android.support:appcompat-v4:27.1.0'



        // Optional -- Mockito framework
   // testCompile 'org.mockito:mockito-core:1.10.19'
        implementation 'com.android.support:multidex:1.0.1'

       /* implementation 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion;
        annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion;*/



        def room_version = "1.1.1"

        implementation "android.arch.persistence.room:runtime:$room_version"
        annotationProcessor "android.arch.persistence.room:compiler:$room_version" // use kapt for Kotlin

        // optional - RxJava support for Room
       // implementation "android.arch.persistence.room:rxjava2:$room_version"

        // optional - Guava support for Room, including Optional and ListenableFuture
      //  implementation "android.arch.persistence.room:guava:$room_version"

        // Test helpers
      //  testImplementation "android.arch.persistence.room:testing:$room_version"

     /*   implementation "android.arch.persistence.room:runtime:1.0.0"
        annotationProcessor "android.arch.persistence.room:compiler:1.0.0"
*/
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.1'
            }
        }
    }
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.gms.oss.licenses.plugin'